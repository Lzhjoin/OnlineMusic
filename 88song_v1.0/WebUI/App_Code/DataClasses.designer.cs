#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_Music")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void InsertMusic(Music instance);
  partial void UpdateMusic(Music instance);
  partial void DeleteMusic(Music instance);
  partial void InsertSingerType(SingerType instance);
  partial void UpdateSingerType(SingerType instance);
  partial void DeleteSingerType(SingerType instance);
  partial void InsertMangerInfo(MangerInfo instance);
  partial void UpdateMangerInfo(MangerInfo instance);
  partial void DeleteMangerInfo(MangerInfo instance);
  partial void InsertMusicStyle(MusicStyle instance);
  partial void UpdateMusicStyle(MusicStyle instance);
  partial void DeleteMusicStyle(MusicStyle instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DB_MusicConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Music> Music
	{
		get
		{
			return this.GetTable<Music>();
		}
	}
	
	public System.Data.Linq.Table<SingerType> SingerType
	{
		get
		{
			return this.GetTable<SingerType>();
		}
	}
	
	public System.Data.Linq.Table<MangerInfo> MangerInfo
	{
		get
		{
			return this.GetTable<MangerInfo>();
		}
	}
	
	public System.Data.Linq.Table<MusicStyle> MusicStyle
	{
		get
		{
			return this.GetTable<MusicStyle>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Music")]
public partial class Music : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MusicID;
	
	private string _MusicName;
	
	private System.Nullable<int> _SingerID;
	
	private string _MusicPath;
	
	private string _LyricPath;
	
	private System.Nullable<int> _MusicTypeID;
	
	private System.Nullable<int> _MusicStyleID;
	
	private string _PublishDate;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMusicIDChanging(int value);
    partial void OnMusicIDChanged();
    partial void OnMusicNameChanging(string value);
    partial void OnMusicNameChanged();
    partial void OnSingerIDChanging(System.Nullable<int> value);
    partial void OnSingerIDChanged();
    partial void OnMusicPathChanging(string value);
    partial void OnMusicPathChanged();
    partial void OnLyricPathChanging(string value);
    partial void OnLyricPathChanged();
    partial void OnMusicTypeIDChanging(System.Nullable<int> value);
    partial void OnMusicTypeIDChanged();
    partial void OnMusicStyleIDChanging(System.Nullable<int> value);
    partial void OnMusicStyleIDChanged();
    partial void OnPublishDateChanging(string value);
    partial void OnPublishDateChanged();
    #endregion
	
	public Music()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusicID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MusicID
	{
		get
		{
			return this._MusicID;
		}
		set
		{
			if ((this._MusicID != value))
			{
				this.OnMusicIDChanging(value);
				this.SendPropertyChanging();
				this._MusicID = value;
				this.SendPropertyChanged("MusicID");
				this.OnMusicIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusicName", DbType="NVarChar(50)")]
	public string MusicName
	{
		get
		{
			return this._MusicName;
		}
		set
		{
			if ((this._MusicName != value))
			{
				this.OnMusicNameChanging(value);
				this.SendPropertyChanging();
				this._MusicName = value;
				this.SendPropertyChanged("MusicName");
				this.OnMusicNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingerID", DbType="Int")]
	public System.Nullable<int> SingerID
	{
		get
		{
			return this._SingerID;
		}
		set
		{
			if ((this._SingerID != value))
			{
				this.OnSingerIDChanging(value);
				this.SendPropertyChanging();
				this._SingerID = value;
				this.SendPropertyChanged("SingerID");
				this.OnSingerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusicPath", DbType="NVarChar(100)")]
	public string MusicPath
	{
		get
		{
			return this._MusicPath;
		}
		set
		{
			if ((this._MusicPath != value))
			{
				this.OnMusicPathChanging(value);
				this.SendPropertyChanging();
				this._MusicPath = value;
				this.SendPropertyChanged("MusicPath");
				this.OnMusicPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LyricPath", DbType="NVarChar(100)")]
	public string LyricPath
	{
		get
		{
			return this._LyricPath;
		}
		set
		{
			if ((this._LyricPath != value))
			{
				this.OnLyricPathChanging(value);
				this.SendPropertyChanging();
				this._LyricPath = value;
				this.SendPropertyChanged("LyricPath");
				this.OnLyricPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusicTypeID", DbType="Int")]
	public System.Nullable<int> MusicTypeID
	{
		get
		{
			return this._MusicTypeID;
		}
		set
		{
			if ((this._MusicTypeID != value))
			{
				this.OnMusicTypeIDChanging(value);
				this.SendPropertyChanging();
				this._MusicTypeID = value;
				this.SendPropertyChanged("MusicTypeID");
				this.OnMusicTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusicStyleID", DbType="Int")]
	public System.Nullable<int> MusicStyleID
	{
		get
		{
			return this._MusicStyleID;
		}
		set
		{
			if ((this._MusicStyleID != value))
			{
				this.OnMusicStyleIDChanging(value);
				this.SendPropertyChanging();
				this._MusicStyleID = value;
				this.SendPropertyChanged("MusicStyleID");
				this.OnMusicStyleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDate", DbType="NVarChar(20)")]
	public string PublishDate
	{
		get
		{
			return this._PublishDate;
		}
		set
		{
			if ((this._PublishDate != value))
			{
				this.OnPublishDateChanging(value);
				this.SendPropertyChanging();
				this._PublishDate = value;
				this.SendPropertyChanged("PublishDate");
				this.OnPublishDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SingerType")]
public partial class SingerType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SingerTypeID;
	
	private string _SingerTypeName;
	
	private string _IsDelete;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSingerTypeIDChanging(int value);
    partial void OnSingerTypeIDChanged();
    partial void OnSingerTypeNameChanging(string value);
    partial void OnSingerTypeNameChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    #endregion
	
	public SingerType()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingerTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SingerTypeID
	{
		get
		{
			return this._SingerTypeID;
		}
		set
		{
			if ((this._SingerTypeID != value))
			{
				this.OnSingerTypeIDChanging(value);
				this.SendPropertyChanging();
				this._SingerTypeID = value;
				this.SendPropertyChanged("SingerTypeID");
				this.OnSingerTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingerTypeName", DbType="NVarChar(10)")]
	public string SingerTypeName
	{
		get
		{
			return this._SingerTypeName;
		}
		set
		{
			if ((this._SingerTypeName != value))
			{
				this.OnSingerTypeNameChanging(value);
				this.SendPropertyChanging();
				this._SingerTypeName = value;
				this.SendPropertyChanged("SingerTypeName");
				this.OnSingerTypeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MangerInfo")]
public partial class MangerInfo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MangerID;
	
	private string _MangerName;
	
	private string _MangerPassword;
	
	private string _MangerLoginDate;
	
	private string _IsSuper;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMangerIDChanging(int value);
    partial void OnMangerIDChanged();
    partial void OnMangerNameChanging(string value);
    partial void OnMangerNameChanged();
    partial void OnMangerPasswordChanging(string value);
    partial void OnMangerPasswordChanged();
    partial void OnMangerLoginDateChanging(string value);
    partial void OnMangerLoginDateChanged();
    partial void OnIsSuperChanging(string value);
    partial void OnIsSuperChanged();
    #endregion
	
	public MangerInfo()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MangerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MangerID
	{
		get
		{
			return this._MangerID;
		}
		set
		{
			if ((this._MangerID != value))
			{
				this.OnMangerIDChanging(value);
				this.SendPropertyChanging();
				this._MangerID = value;
				this.SendPropertyChanged("MangerID");
				this.OnMangerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MangerName", DbType="NVarChar(10)")]
	public string MangerName
	{
		get
		{
			return this._MangerName;
		}
		set
		{
			if ((this._MangerName != value))
			{
				this.OnMangerNameChanging(value);
				this.SendPropertyChanging();
				this._MangerName = value;
				this.SendPropertyChanged("MangerName");
				this.OnMangerNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MangerPassword", DbType="NVarChar(20)")]
	public string MangerPassword
	{
		get
		{
			return this._MangerPassword;
		}
		set
		{
			if ((this._MangerPassword != value))
			{
				this.OnMangerPasswordChanging(value);
				this.SendPropertyChanging();
				this._MangerPassword = value;
				this.SendPropertyChanged("MangerPassword");
				this.OnMangerPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MangerLoginDate", DbType="NVarChar(20)")]
	public string MangerLoginDate
	{
		get
		{
			return this._MangerLoginDate;
		}
		set
		{
			if ((this._MangerLoginDate != value))
			{
				this.OnMangerLoginDateChanging(value);
				this.SendPropertyChanging();
				this._MangerLoginDate = value;
				this.SendPropertyChanged("MangerLoginDate");
				this.OnMangerLoginDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuper", DbType="NVarChar(2)")]
	public string IsSuper
	{
		get
		{
			return this._IsSuper;
		}
		set
		{
			if ((this._IsSuper != value))
			{
				this.OnIsSuperChanging(value);
				this.SendPropertyChanging();
				this._IsSuper = value;
				this.SendPropertyChanged("IsSuper");
				this.OnIsSuperChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MusicStyle")]
public partial class MusicStyle : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MusicStyleID;
	
	private string _MusicStyleName;
	
	private string _IsDelete;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMusicStyleIDChanging(int value);
    partial void OnMusicStyleIDChanged();
    partial void OnMusicStyleNameChanging(string value);
    partial void OnMusicStyleNameChanged();
    partial void OnIsDeleteChanging(string value);
    partial void OnIsDeleteChanged();
    #endregion
	
	public MusicStyle()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusicStyleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MusicStyleID
	{
		get
		{
			return this._MusicStyleID;
		}
		set
		{
			if ((this._MusicStyleID != value))
			{
				this.OnMusicStyleIDChanging(value);
				this.SendPropertyChanging();
				this._MusicStyleID = value;
				this.SendPropertyChanged("MusicStyleID");
				this.OnMusicStyleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusicStyleName", DbType="NVarChar(10)")]
	public string MusicStyleName
	{
		get
		{
			return this._MusicStyleName;
		}
		set
		{
			if ((this._MusicStyleName != value))
			{
				this.OnMusicStyleNameChanging(value);
				this.SendPropertyChanging();
				this._MusicStyleName = value;
				this.SendPropertyChanged("MusicStyleName");
				this.OnMusicStyleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="NChar(10)")]
	public string IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
